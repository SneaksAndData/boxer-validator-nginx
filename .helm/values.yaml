environment: "Development"

image:
  # Repository to pull the image from
  repository: "ghcr.io/sneaksanddata/boxer-validator-nginx"
  
  # Tag to pull (defaults to the chart appVersion)
  tag: ""
  
  # Image pull policy
  pullPolicy: "IfNotPresent"

# Image pull secrets for private repositories
imagePullSecrets: [ ]

# Override the application name
nameOverride: ""

# Fullname override
fullnameOverride: ""

# Service account configuration
serviceAccount:
  
  # Specifies whether a service account should be created
  create: true
  
  # Annotations to add to the service account
  annotations: { }
  
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""


# Additional labels for the stream classes
additionalLabels: { }
# Example:
#
#  app.my-company.com/name: company
#  app.my-company.com/component: auth

# Additional labels for the stream classes
additionalAnnotations: { }
# Example:
#
#  app.my-company.com/name: company
#  app.my-company.com/application: application

# Extra environment variables to set in the deployment
extraEnv: { }
# Example:
#
#  - name: DEPLOY_ENVIRONMENT
#    value: production

# Extra environment variables referencing a ConfigMap or Secret
extraEnvFrom: { }
# Example:
#
#  envFrom:
#    - configMapRef:
#        name: custom-app-environment

extraVolumes: { }
# Example:
#
#  - name: data-volume
#    emptyDir:
#      sizeLimit: 500Mi

# Extra volumes to add to the deployment
extraVolumeMounts: { }
# Example:
#
#  - mountPath: /data
#    name: data-volume

# Resources constraints. By default, the operator does not specify any constraints to allow for easier deployment
resources: { }
# Example:
#
#  requests:
#    cpu: 1
#    memory: 1Gi
#  limits:
#    cpu: 1
#    memory: 1Gi

# Node labels for pod assignment
tolerations: { }

# Node labels for pod assignment
affinity: { }

# Security context settings for the container
securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000
  seccompProfile:
    type: RuntimeDefault


### Role Based Access Control configuration
rbac:
  # This parameter determines whether role binding resources need to be created.
  # If you have any roles in your configuration set to 'true', then this parameter for creating role binding resources
  # should also be set to 'true'.
  clusterRoleBindings:

    schemaViewer:
      create: true
      additionalLabels: { }
      additionalAnnotations: { }
      nameOverride: ""
      roleNameOverride: ""

    schemaEditor:
      create: true
      additionalLabels: { }
      additionalAnnotations: { }
      nameOverride: ""
      roleNameOverride: ""

    cedarEntityViewer:
      create: true
      additionalLabels: { }
      additionalAnnotations: { }
      nameOverride: ""
      roleNameOverride: ""

    cedarEntityEditor:
      create: true
      additionalLabels: { }
      additionalAnnotations: { }
      nameOverride: ""
      roleNameOverride: ""

    actionDiscoveryViewer:
      create: true
      additionalLabels: { }
      additionalAnnotations: { }
      nameOverride: ""
      roleNameOverride: ""

    actionDiscoveryEditor:
      create: true
      additionalLabels: { }
      additionalAnnotations: { }
      nameOverride: ""
      roleNameOverride: ""

    resourceDiscoveryViewer:
      create: true
      additionalLabels: { }
      additionalAnnotations: { }
      nameOverride: ""
      roleNameOverride: ""

    resourceDiscoveryEditor:
      create: true
      additionalLabels: { }
      additionalAnnotations: { }
      nameOverride: ""
      roleNameOverride: ""

    policySetViewer:
      create: true
      additionalLabels: { }
      additionalAnnotations: { }
      nameOverride: ""
      roleNameOverride: ""

    policySetEditor:
      create: true
      additionalLabels: { }
      additionalAnnotations: { }
      nameOverride: ""
      roleNameOverride: ""


# The Boxer validator configuration
validator:

  # Number of replicas for the validator deployment
  replicas: 3

  maxUnavailable: 1

  # The deployment strategy for the validator
  deploymentStrategy:
    type: RollingUpdate

    # Rolling update strategy configuration
    rollingUpdate:
      # Maximum number of pods that can be unavailable during the update
      maxUnavailable: 1

      # Maximum number of pods that can be created over the desired number of pods
      maxSurge: 1

  # autoscaling configuration
  autoscaling:
    enabled: false
    minReplicas: 3
    maxReplicas: 9
    targetMemoryAvg: 80
    targetCPUAvg: 60
    scaleStabilizationWindowSeconds: 180
    scalePeriodSeconds: 30
    scaleByPercent: 10

  # Validator configuration
  # Individual settings can be overridden using environment variables
  # Whole config can also be overridden by setting config.enabled=false and mounting a new settings.toml to /app path in the container
  config:
    enabled: true

    # Override with RUST_LOG
    logLevel: "info"

    # The Ip address on which the application listens for HTTP requests
    # Defaults to the loopback interface
    listenIp: ""

    # The port on which the validator listens for HTTP requests
    port: 80

    # The instance name for the validator
    # Used to generate the lease name and other instance-specific settings
    # Defaults to the release name
    instance_name: ""

    # The backend configuration
    backend:
      kubernetes:
        # Namespace where the backend operates
        # Defaults to the namespace where the is deployed
        namespace: ""

        # The kubeconfig source
        kubeconfig:

          # Set to true to use the in-cluster kubeconfig
          # Default: In cluster kubeconfig is used
          # If set to false, the kubeconfig filePath or exec will be used
          # The settings prioritize as follows:
          # - inCluster
          # - filePath
          # - exec
          inCluster: true

          # The kubeconfig file path to use
          filePath: ""

          # The executable to use for kubeconfig
          exec: ""

        # The operation timeout in seconds
        operationTimeout: "30s"

        # The label applied to the resources created by the validator
        # defaults to the release full name
        resourceOwnerLabel: ""


# Observability settings for Datadog
datadog:

  # if enabled, will set Datadog-specific environment variables on the container
  enabled: false

  # Datadog endpoint to sink logs to
  endpoint: "datadoghq.eu"

  # Name for a Secret resource that contains Datadog API Key to use for log submissions
  apiKeySecret: "secretName"

  # Key in the secret that contains datadog api key
  apiKeySecretKey: "secretKey"

  # Datadog Service Name parameter
  serviceName: "boxer-validator-nginx"

  # value to use as a DogStatsd server url
  # Examples: udp://127.0.0.1:8125 or unix:///path/to/dsd.socket
  # https://github.com/DataDog/datadog-go?tab=readme-ov-file#unix-domain-sockets-client
  statsdUrl: unix:///var/run/datadog/dsd.socket

  # enables metric origin detection by setting DD_ENTITY_ID
  enableOriginDetection: true



